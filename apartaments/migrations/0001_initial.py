# Generated by Django 5.2 on 2025-05-20 10:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apartment_name', models.CharField(max_length=200, verbose_name='Название квартиры')),
                ('has_gas', models.PositiveIntegerField(null=True, verbose_name='Наличие газа и счётчика')),
                ('has_water', models.PositiveIntegerField(null=True, verbose_name='Наличие доставки воды и счётчика')),
                ('has_electricity', models.PositiveIntegerField(null=True, verbose_name='Электричество')),
                ('uses_lift', models.BooleanField(default=False, verbose_name='Наличие лифта')),
                ('has_garbage', models.BooleanField(default=False, verbose_name='Есть ли плата за вывоз мусора?')),
                ('has_apart_payment', models.BooleanField(default=False, verbose_name='Наличие квартплаты')),
                ('has_internet', models.BooleanField(default=False, verbose_name='Наличие интернета')),
                ('number_registered', models.PositiveIntegerField(default=0, verbose_name='Количество зарегистрированных в квартире')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='ElectricityIndicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
                ('electro_meter_one', models.PositiveIntegerField(default=0, verbose_name='Показания электр.счётчика-1')),
                ('electro_tariff_one', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='тариф на электроэнергию-1')),
                ('electro_meter_two', models.PositiveIntegerField(default=0, verbose_name='Показания электр.счётчика - 2')),
                ('electro_tariff_two', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='тариф на электроэнергию - 2')),
                ('apartament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apartaments.apartment', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Электроэнергия',
                'verbose_name_plural': 'Электроэнергия',
                'db_table': 'Еlectricity',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='GasIndicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
                ('gas_meter', models.PositiveIntegerField(default=0, verbose_name='Показания газ.счётчика')),
                ('gas_tariff_counter', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='тариф на газ по счётчику')),
                ('gas_tariff_no_counter', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='тариф на газ без счётчика')),
                ('gas_delivery', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='цена за доставку газа')),
                ('apartament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apartaments.apartment', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Газ',
                'verbose_name_plural': 'Газ',
                'db_table': 'Gas',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='OtherPayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
                ('apart_payment', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='платеж за квартиру')),
                ('garbage', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='платеж за мусор')),
                ('lift', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='платеж за лифт')),
                ('internet', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='платеж за интернет')),
                ('apartament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apartaments.apartment', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Другие платежи',
                'verbose_name_plural': 'Другие платежи',
                'db_table': 'OtherPayments',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='WaterIndicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время')),
                ('water_meter_one', models.PositiveIntegerField(default=0, verbose_name='Показания вод.счётчика #1')),
                ('water_meter_two', models.PositiveIntegerField(default=0, verbose_name='Показания вод.счётчика #2')),
                ('water_tariff_counter', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='тариф на воду по счётчику')),
                ('water_tariff_nocounter', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='тариф на воду без счётчика')),
                ('water_abon_plata', models.DecimalField(decimal_places=2, default=0.0, max_digits=7, verbose_name='aбонплата на воду')),
                ('apartament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apartaments.apartment', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Вода',
                'verbose_name_plural': 'Вода',
                'db_table': 'Water',
                'ordering': ('id',),
            },
        ),
    ]
