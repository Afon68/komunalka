#!/usr/bin/env bash
set -e

echo "๐ฆ ะฃััะฐะฝะฐะฒะปะธะฒะฐะตะผ ะทะฐะฒะธัะธะผะพััะธ..."
pip install -r requirements.txt

echo "๐ฏ ะกะพะฑะธัะฐะตะผ ััะฐัะธะบั..."
python manage.py collectstatic --no-input
echo "โ ะกัะฐัะธะบะฐ ัะพะฑัะฐะฝะฐ"

echo "๐ ะัะธะผะตะฝัะตะผ ะผะธะณัะฐัะธะธ..."
python manage.py migrate

echo "๐ค ะัะพะฒะตััะตะผ ะฝะฐะปะธัะธะต ััะฟะตัะฟะพะปัะทะพะฒะฐัะตะปั..."
python manage.py shell << END
from django.contrib.auth import get_user_model
User = get_user_model()
username = 'admin'
email = 'admin@example.com'
password = 'admin123'
if not User.objects.filter(username=username).exists():
    User.objects.create_superuser(username, email, password)
    print("โ ะกัะฟะตัะฟะพะปัะทะพะฒะฐัะตะปั ัะพะทะดะฐะฝ")
else:
    print("โน๏ธ ะกัะฟะตัะฟะพะปัะทะพะฒะฐัะตะปั ัะถะต ัััะตััะฒัะตั")
END

echo "โ ะัั ะณะพัะพะฒะพ, ะผะพะถะฝะพ ะทะฐะฟััะบะฐัั gunicorn"
